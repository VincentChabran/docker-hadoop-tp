version: "3"

services:
   namenode:
      image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
      container_name: namenode
      restart: always
      ports:
         - 9870:9870
         - 9010:9000
      volumes:
         - hadoop_namenode:/hadoop/dfs/name
         - ./data:/data
      environment:
         - CLUSTER_NAME=test
         - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      env_file:
         - ./hadoop.env

   datanode:
      image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
      container_name: datanode
      restart: always
      volumes:
         - hadoop_datanode:/hadoop/dfs/data
      environment:
         SERVICE_PRECONDITION: "namenode:9870"
         CORE_CONF_fs_defaultFS: hdfs://namenode:9000
      ports:
         - "9864:9864"
      env_file:
         - ./hadoop.env

   resourcemanager:
      image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
      container_name: resourcemanager
      restart: always
      environment:
         SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
      env_file:
         - ./hadoop.env

   nodemanager1:
      image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
      container_name: nodemanager
      restart: always
      environment:
         SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
      env_file:
         - ./hadoop.env

   historyserver:
      image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
      container_name: historyserver
      restart: always
      environment:
         SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
      volumes:
         - hadoop_historyserver:/hadoop/yarn/timeline
      env_file:
         - ./hadoop.env

   spark-master:
      image: bde2020/spark-master:3.0.0-hadoop3.2
      container_name: spark-master
      depends_on:
         - namenode
         - datanode
         - hive-server
         - mongodb
         - cassandra
      ports:
         - "8080:8080"
         - "7077:7077"
      environment:
         - INIT_DAEMON_STEP=setup_spark
         - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
         - SPARK_JARS=/opt/spark/jars/spark-cassandra-connector_2.12-3.1.0.jar
      volumes:
         - ./jars:/opt/spark/jars
         - ./app/mongo/spark.py:/spark_mongo.py
         - ./app/mapreduce:/mapreduce
         - ./app/cassandraa/spark.py:/spark_cassandra.py

   spark-worker-1:
      image: bde2020/spark-worker:3.0.0-hadoop3.2
      container_name: spark-worker-1
      depends_on:
         - spark-master
      ports:
         - "8081:8081"
      environment:
         - "SPARK_MASTER=spark://spark-master:7077"
         - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      volumes:
         - ./jars:/opt/spark/jars

   hive-server:
      image: bde2020/hive:2.3.2-postgresql-metastore
      container_name: hive-server
      depends_on:
         - namenode
         - datanode
         - mongodb
      env_file:
         - ./hadoop-hive.env
      environment:
         HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
         SERVICE_PRECONDITION: "hive-metastore:9083"
      ports:
         - "10000:10000"

   hive-metastore:
      image: bde2020/hive:2.3.2-postgresql-metastore
      container_name: hive-metastore
      env_file:
         - ./hadoop-hive.env
      command: /opt/hive/bin/hive --service metastore
      environment:
         SERVICE_PRECONDITION: "namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
      ports:
         - "9083:9083"

   hive-metastore-postgresql:
      image: bde2020/hive-metastore-postgresql:2.3.0
      container_name: hive-metastore-postgresql

   presto-coordinator:
      image: shawnzhu/prestodb:0.181
      container_name: presto-coordinator
      ports:
         - "8089:8089"

   spark-notebook:
      image: jupyter/all-spark-notebook
      container_name: spark-notebook
      depends_on:
         - spark-master
         - namenode
         - datanode
      ports:
         - "8888:8888"
      environment:
         # - JUPYTER_TOKEN=
         - SPARK_MASTER=spark://spark-master:7077
         - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      volumes:
         - ./notebooks:/home/jovyan/work # Persist notebooks
         - ./jars:/opt/spark/jars
         - ./data:/data

   mongodb:
      image: mongo:latest
      container_name: mongodb
      restart: always
      ports:
         - 27016:27017
      volumes:
         - mongo_data:/data/db

   # mongo-express:
   #    image: mongo-express:latest
   #    container_name: mongo-express
   #    restart: always
   #    ports:
   #       - 8081:8081
   #    environment:
   #       - ME_CONFIG_MONGODB_SERVER=mongodb
   #    depends_on:
   #       - mongodb

   # Serveur Cassandra pour le stockage NoSQL
   # Serveur Cassandra pour le stockage NoSQL
   cassandra:
      image: cassandra:latest
      container_name: cassandra
      restart: always
      environment:
         - CASSANDRA_CLUSTER_NAME=Test Cluster
         - CASSANDRA_NUM_TOKENS=256
         - CASSANDRA_SEEDS=cassandra
      ports:
         - "9042:9042" # Port pour CQL (Cassandra Query Language)
      volumes:
         - cassandra_data:/var/lib/cassandra

volumes:
   hadoop_namenode:
   hadoop_datanode:
   hadoop_historyserver:
   mongo_data:
   cassandra_data:
